{"ast":null,"code":"class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\", \"stun:global.stun.twilio.com:3478\"]\n        }]\n      });\n    }\n  }\n\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n\n}\n\nexport default new PeerService();","map":{"version":3,"names":["PeerService","constructor","peer","RTCPeerConnection","iceServers","urls","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer"],"sources":["C:/Users/ASUS/Desktop/React-webRTC-main/client/src/service/peer.js"],"sourcesContent":["class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [\n          {\n            urls: [\n              \"stun:stun.l.google.com:19302\",\n              \"stun:global.stun.twilio.com:3478\",\n            ],\n          },\n        ],\n      });\n    }\n  }\n\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n}\n\nexport default new PeerService();\n"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;EAChBC,WAAW,GAAG;IACZ,IAAI,CAAC,KAAKC,IAAV,EAAgB;MACd,KAAKA,IAAL,GAAY,IAAIC,iBAAJ,CAAsB;QAChCC,UAAU,EAAE,CACV;UACEC,IAAI,EAAE,CACJ,8BADI,EAEJ,kCAFI;QADR,CADU;MADoB,CAAtB,CAAZ;IAUD;EACF;;EAEc,MAATC,SAAS,CAACC,KAAD,EAAQ;IACrB,IAAI,KAAKL,IAAT,EAAe;MACb,MAAM,KAAKA,IAAL,CAAUM,oBAAV,CAA+BD,KAA/B,CAAN;MACA,MAAME,GAAG,GAAG,MAAM,KAAKP,IAAL,CAAUQ,YAAV,EAAlB;MACA,MAAM,KAAKR,IAAL,CAAUS,mBAAV,CAA8B,IAAIC,qBAAJ,CAA0BH,GAA1B,CAA9B,CAAN;MACA,OAAOA,GAAP;IACD;EACF;;EAEwB,MAAnBE,mBAAmB,CAACF,GAAD,EAAM;IAC7B,IAAI,KAAKP,IAAT,EAAe;MACb,MAAM,KAAKA,IAAL,CAAUM,oBAAV,CAA+B,IAAII,qBAAJ,CAA0BH,GAA1B,CAA/B,CAAN;IACD;EACF;;EAEa,MAARI,QAAQ,GAAG;IACf,IAAI,KAAKX,IAAT,EAAe;MACb,MAAMK,KAAK,GAAG,MAAM,KAAKL,IAAL,CAAUY,WAAV,EAApB;MACA,MAAM,KAAKZ,IAAL,CAAUS,mBAAV,CAA8B,IAAIC,qBAAJ,CAA0BL,KAA1B,CAA9B,CAAN;MACA,OAAOA,KAAP;IACD;EACF;;AArCe;;AAwClB,eAAe,IAAIP,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}